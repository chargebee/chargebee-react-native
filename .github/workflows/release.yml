name: Release to NPM and Github
on: 
  ## Remove for merge
  pull_request:
    branches:
      - release-prep-temp
  workflow_run:
    workflows: Build React Native
    branches: [master, next]
    types: completed
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ## Remove for merge
          ref: release-test 
      - name: Initialize Git Config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Initialize NPM config
        run: |
            npm config set registry https://hptest.jfrog.io/artifactory/api/npm/npm/
            npm config set //hptest.jfrog.io/artifactory/api/npm/npm/:_authToken=$NPM_TOKEN
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Pre-Release package
        if: github.ref == 'refs/heads/next'
        run: yarn release --ci --preRelease=beta --dry-run 
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
      - name: Release package
        if: github.ref == 'refs/heads/release-prep-temp'
        run: yarn release --ci --dry-run 
        env: 
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
